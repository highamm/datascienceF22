---
title: "Strings with `stringr` and `tidytext`"
format: html
---

```{r}
x <- 7



library(tidyverse)
library(here)
beyonce <- read_csv(here("data/beyonce_lyrics.csv"))
head(beyonce)
beyonce$line[1:4]
library(tidytext)
beyonce_unnest <- beyonce |> unnest_tokens(output = "word", input = "line")
beyonce_unnest
beyonce_unnest <- beyonce_unnest |> mutate(word = str_to_lower(word))
beyonce_unnest |> group_by(word) |>
  summarise(n = n()) |>
  arrange(desc(n))
head(stop_words)
beyonce_stop <- anti_join(beyonce_unnest, stop_words, by = c("word" = "word"))
beyonce_sum <- beyonce_stop |> group_by(word) |>
  summarise(n = n()) |>
  arrange(desc(n)) |>
  print(n = 25)
beyonce_sum
## install.packages("wordcloud")
library(wordcloud)
beyonce_small <- beyonce_sum |> filter(n > 50)
wordcloud(beyonce_small$word, beyonce_small$n, 
          colors = brewer.pal(8, "Dark2"), scale = c(5, .2),
          random.order = FALSE, random.color = FALSE)
```

## Section 14.3: Strings with `stringr`

```{r}
library(here)
library(tidyverse)
med_djok_df <- read_csv(here("data/med_djok.csv"))
head(med_djok_df)
str_detect(med_djok_df$point, pattern = "f") ## detect if the point had a forehand played (f was code for forehand)
med_djok_df |>
  mutate(has_forehand = str_detect(point, pattern = "f"))


str_detect(med_djok_df$point, pattern = "d@")
sum(str_detect(med_djok_df$point, pattern = "d@"))
sum(str_detect(med_djok_df$point, pattern = "w@"))
sum(str_detect(med_djok_df$point, pattern = "n@"))
med_djok_df |> filter(str_detect(point, pattern = "@") == TRUE)
med_djok_df |> filter(str_detect(point, pattern = "@") == TRUE) |>
  mutate(error_type = case_when(str_detect(point, pattern = "d@") ~ "deep error",
                                   str_detect(point, pattern = "w@") ~ "wide error",
            str_detect(point, pattern = "n@") ~ "net error")) |>
  group_by(PtWinner, error_type) |>
  summarise(n_errors = n())
str_detect(med_djok_df$point, pattern = "\\*")
str_detect(med_djok_df$point, pattern = "^4")
str_detect(med_djok_df$point, pattern = "@$")
str_extract_all(med_djok_df$point, pattern = "f[:digit:]+")
```

Exercises 14.3.3
```{r}
## exercise 1
med_djok_df <- med_djok_df |> mutate(serve_location = case_when(
  str_detect(point, "^4") ~"wide",
  str_detect(point, "^5") ~"body",
  str_detect(point, "^6") ~ "down the center")) |>
  relocate(serve_location)

## exercise 2
med_djok_df |> group_by(Serving, serve_location) |>
  summarise(n_count = n())

## exercise 3
med_djok_df |> group_by(Serving, serve_location) |>
  summarise(prop_serve_won = mean(isSvrWinner))

## exercise 4
med_djok_df |>
  mutate(volley_hit = if_else(str_detect(point, "v") |
                                str_detect(point, "z") |
                                str_detect(point, "i") |
                                str_detect(point, "k"),
                              true = 1,
                              false = 0)) |>
  relocate(volley_hit) |>
  summarise(prop_volley = mean(volley_hit))

```

