---
title: "Untitled"
format: html
---

```{r}
library(DBI)
library(duckdb)
con <- DBI::dbConnect(duckdb::duckdb())
con
library(here)
duckdb_read_csv(conn = con, name = "tennis2018", 
                files = here("data/atp_matches_2018.csv"))
duckdb_read_csv(conn = con, name = "tennis2019", 
                files = here("data/atp_matches_2019.csv"))
dbListTables(con)
dbExistsTable(con, "tennis2019")
dbExistsTable(con, "tennis2020")

library(tidyverse)

sql <- "
  SELECT surface, winner_name, loser_name, w_ace, l_ace, minutes
  FROM tennis2019 
  WHERE minutes > 240
"
dbGetQuery(con, sql)|>
  as_tibble()

## exercise 1
## giving all matches from tennis2019 where the minutes are larger than 240 (and only keeping some variables)

## exercise 2
## WHERE is like filter()
## SELECT is like select()
```

## Section 17.2: `dbplyr`

```{r}
library(dbplyr)
tennis_db <- tbl(con, "tennis2019")
tennis_db
tennis_query1 <- tennis_db |> 
  filter(minutes > 240) |> 
  select(minutes, winner_name, loser_name, minutes, tourney_name)
tennis_query1
tennis_query1 |>
  collect()
tennis_query1 |>
  show_query()
medvedev_query <- tennis_db |>
  pivot_longer(c(winner_name, loser_name), names_to = "win_loss",
               values_to = "player") |>
  filter(player == "Daniil Medvedev") |>
  group_by(win_loss) |>
  summarise(win_loss_count = n())
medvedev_query
show_query(medvedev_query)
over20aces <- tennis_db |> filter(w_ace > 20) |>
  select(w_ace, winner_name) |>
  group_by(winner_name) |>
  summarise(nmatch = n()) |>
  arrange(desc(nmatch))
over20aces

over20aces |> show_query()

## exercises 1-3
## exercise 2
tennis_db |> mutate(rank_diff = winner_rank_points - loser_rank_points) |>
  select(rank_diff) |>
  show_query()
```

tennis_db |> show_query()
tennis_db |> filter(winner_hand == "L") |>
  arrange(desc(tourney_date)) |>
  show_query()
tennis_db |>
  group_by(winner_name) |>
  summarise(meanace = mean(w_ace, na.rm = TRUE)) |>
  show_query()
tennis_db |> select(1:4) |> show_query()
tennis_db |> rename(tournament = tourney_name) |>
  show_query()
tennis_db |> mutate(prop_first_won = w_1stIn / w_1stWon) |>
  select(prop_first_won, winner_name) |>
  show_query()
tennis_db |> summarise(mean_length = mean(minutes)) |>
  show_query()
tennis_db |> group_by(winner_name) |>
  summarise(meanlength = mean(minutes)) |>
  show_query()
tennis_db |> filter(winner_age > 35 | loser_age > 35) |>
  show_query()
tennis_db |> arrange(desc(winner_rank_points)) |>
  show_query()
```