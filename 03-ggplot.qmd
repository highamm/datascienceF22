---
title: "Plotting with ggplot2"
format: html
---


```{r}
library(tidyverse)
pres_df <- read_table("data/PRES2000.txt") 
## don't worry about the `read_table` function....yet
head(pres_df)
ggplot(data = pres_df, aes(x = Gore)) +
  geom_histogram(colour = "black", fill = "white") +
  xlab("Votes for Gore in Florida")
ggplot(data = pres_df, aes(x = Gore)) +
  geom_freqpoly(colour = "black") +
  xlab("Votes for Gore in Florida") 
ggplot(data = pres_df, aes(x = Gore)) +
  geom_freqpoly(colour = "black") +
  xlab("Votes for Gore in Florida") +
  geom_histogram() 
```

### Exercises 3.3.4 1, 2

```{r}
ggplot(data = pres_df, aes(x = Bush)) +
  geom_freqpoly(colour = "black") +
  xlab("Votes for Bush in Florida") 
## there is one outlier

## exercise 2
## histogram might be more familiar to more people
## advantage for frquencyt plot is that you can overlay multiple 
## groups

pres_cat <- pres_df |> mutate(winner = if_else(Gore > Bush,
                                                true = "Gore",
                                                false = "Bush"))
pres_cat
ggplot(data = pres_cat, aes(x = winner)) +
  geom_bar()
pres_cat2 <- pres_cat |> group_by(winner) |>
  summarise(nwins = n())
pres_cat2


ggplot(pres_cat2, aes(x = winner)) +
  geom_bar()
ggplot(pres_cat2, aes(x = winner, y = nwins)) +
  geom_col()
## exercsise 3
## bush won more counties overall but not nnecessarily more votes


library(tidyverse)
stat113_df <- read_csv("data/stat113.csv")
head(stat113_df)
```

## Section 3.4: Plotting Two Variables


```{r}
ggplot(data = pres_df, aes(x = Buchanan, y = Bush)) +
  geom_point()
library(tidyverse)
fitness_full <- read_csv("data/higham_fitness_clean.csv") |> mutate(weekend_ind = case_when(weekday == "Sat" | weekday == "Sun" ~ "weekend",
  TRUE ~ "weekday"))
ggplot(data = fitness_full, aes(x = distance, y = active_cals)) +
  geom_point()
## drop observations that have active calories < 50. 
## assuming that these are data errors or 
## days where the Apple Watch wasn't worn.
fitness <- fitness_full |>
  filter(active_cals > 50)
ggplot(data = fitness) +
  geom_point(aes(x = distance, y = active_cals))
ggplot(data = fitness) +
  geom_point(aes(x = Start, y = active_cals, colour = weekend_ind))
ggplot(data = fitness) +
  geom_point(aes(x = Start, y = active_cals, shape = weekend_ind))
ggplot(data = fitness) +
  geom_point(aes(x = Start, y = active_cals, size = flights))


ggplot(data = fitness) +
  geom_point(aes(x = Start, y = active_cals), colour = "purple")

ggplot(data = fitness) +
  geom_point(aes(x = Start, y = active_cals), size = 1.5, shape = 20)

## if aes() is in ggplot(), these are "global aesthetics,
## applied tto all geoms unless explicitly overridden

ggplot(data = fitness, aes(x = Start, y = active_cals,
                           colour = weekend_ind)) +
  geom_point() +
  geom_smooth(span = 0.3)

## local aes() go into one gheom and are applied only
## to that geom
ggplot(data = fitness, aes(x = Start, y = active_cals)) +
  geom_point(aes(colour = weekend_ind)) +
  geom_smooth(span = 0.3)
ggplot(data = fitness, aes(x = Start, y = active_cals)) +
  geom_point() +
  geom_smooth(aes(colour = weekend_ind), span = 0.3)

ggplot(data = fitness, aes(x = Start, y = active_cals)) +
  geom_point() +
  geom_smooth(se = FALSE, method = "lm")

ggplot(data = fitness, aes(x = Start, y = steps)) +
  geom_point() + geom_smooth() + xlab("Date")
ggplot(data = fitness, aes(x = Start, y = steps)) +
  geom_line() + geom_smooth() + xlab("Date")

df <- tibble::tibble(x = rnorm(100, 0, 1), y =  rnorm(100, 0, 1),
               catvar = sample(c("a", "b", "c", "d", "e", "f", "f", "g", "h", "i", "j"), size = 100, replace = TRUE))


ggplot(data = df, aes(x = x, y = y)) +
  geom_point() +
  facet_wrap(~catvar)
ggplot(data = stat113_df, aes(x = Exercise, y = Pulse,
                           colour = Year)) +
  geom_point() +
  geom_smooth(se = TRUE)
ggplot(data = stat113_df, aes(x = Exercise, y = Pulse)) +
  geom_point() +
  geom_smooth(se = TRUE) +
  facet_wrap(~ Year)
ggplot(data = stat113_df, aes(x = Award, y = Exercise)) +
  geom_boxplot()
ggplot(data = stat113_df, aes(x = Award, y = Exercise)) +
  geom_violin()
ggplot(data = stat113_df, aes(x = Year, fill = SocialMedia)) +
  geom_bar(position = "fill") +
  ylab("Proportion")
```

